attrition <- read.csv("CaseStudy2-data.csv", header = TRUE)
head(attrition)
summary(attrition)
head(attrition)
#check if any column does have NAs
colSums(is.na(attrition))
attrition <- read.csv("CaseStudy2-data.csv", header = TRUE)
head(attrition)
summary(attrition)
str(attrition)
#check if any column does have NAs
colSums(is.na(attrition))
ggplot(data = attrition) +
geom_bar(mapping = aes(x = Department))
#filter on the employees with attrition == 'yes'
quit <- attrition %>% filter(Attrition == 'yes')
library(tidyverse)
attrition <- read.csv("CaseStudy2-data.csv", header = TRUE)
head(attrition)
summary(attrition)
str(attrition)
#check if any column does have NAs
colSums(is.na(attrition))
#filter on the employees with attrition == 'yes'
quit <- attrition %>% filter(Attrition == 'yes')
ggplot(data = attrition) +
geom_bar(mapping = aes(x = Department))
attrition %>%
count(Department, Attrition = 'yes')
ggplot(data = quit) +
geom_bar(mapping = aes(x = Department))
ggplot(data = quit) +
geom_bar(mapping = aes(x = Department))
attrition %>%
count(Department, Attrition = 'yes')
quit %>%
count(Department, Attrition = 'yes')
head(quit)
head(attrition)
#filter on the employees with attrition == 'yes'
quit <- attrition %>% filter(Attrition == 'no')
head(quit)
#filter on the employees with attrition == 'yes'
quit <- attrition %>% filter(Attrition == 'No')
head(quit)
#filter on the employees with attrition == 'yes'
quit <- attrition %>% filter(Attrition == 'Yes')
head(quit)
quit %>%
count(Department, Attrition = 'yes')
ggplot(data = quit) +
geom_bar(mapping = aes(x = Department))
fit <- lm(Attrition ~ BusinessTravel+ DailyRate+Department+DistanceFromHome+Education+EducationField+EmployeeCount+EmployeeNumber)
fit <- lm(Attrition ~ BusinessTravel+ DailyRate+Department+DistanceFromHome+Education+EducationField+EmployeeCount+EmployeeNumber, data=quit)
summary(fit)
quit %>%
count(Gender)
quit %>%
group_by(class) %>%
count(Gender)
quit %>%
group_by(Department) %>%
count(Gender)
quit %>%
group_by(Department) %>%
count(Gender)%>%
summarize(sum(MonthlyIncome))
quit %>%
group_by(Department) %>%
count(Gender)
quit %>%
group_by(JobRole) %>%
count(Gender)
quit %>%
group_by(JobRole) %>%
count(Gender)
quit %>%
group_by(YearsSinceLastPromotion) %>%
count(JobRole)
quit %>%
group_by(YearsSinceLastPromotion) %>%
count(Department)
ggplot(data = quit) +
geom_bar(mapping = aes(x = JobSatisfaction))
diamonds %>%
select(price, carat, cut) %>%
ggpairs(mapping = aes(color = cut))
---
title: "Unit 3 Overall"
author: "Bivin"
date: "4/29/2019"
output: html_document
---
## Missing Values
```{r}
library(tidyverse)
Soccer = read.csv("FIFA Players.csv", header = TRUE)
head(Soccer)
lmlf <- Soccer %>% filter(Position == 'LM' & Position == 'LF',)
dflmlf <- data.frame(lmlf)
head(lmlf)
head(Soccer)
a = Soccer[Soccer$Position == "LM",]
a
b = ! is.na(a$Agility)
plot(factor(a),b)
mean(b)
c = Soccer[Soccer$Position == "LF",]
d = ! is.na(a$Agility)
midagility = Soccer %>% filter(! is.na(Agility & Position == "LM"))
head(midagility)
mean(midagility)
foragility = Soccer %>% filter(! is.na(Agility & Position == "LF"))
head(midagility)
head(foragility)
t.test(x = b, d,)
t.test(x = midagility, y = foragility, conf.int = .95, var.equal = TRUE, alternative = "two.sided")
a = Soccer$Position
head(a)
x = NA
is.na(x)
#Dataframe for the Example
age = c(22,21,NA,24,19,20,23)
yrs_math_ed = c(4,5,NA,2,5,3,5)
names = c("Mary","Martha","Rosy","Kim","Kristen","Amy","Sam")
subject = c("English","Math",NA,"Sociology","Math","Music","Dance")
df = data.frame(Age = age, Years = yrs_math_ed,Name = names, Major = subject)
df
is.na(df$Years)
is.na(df$Name)
is.na(df$Major)
```
```{r}
library(tidyverse)
df %>% filter(!is.na(Years)) #Filter out rows with missing Years
```
```{r}
mpg %>%
arrange(manufacturer) %>%
print(n = 30)
```
```{r}
mpg %>%
arrange(manufacturer, cty) %>%
print(n = 30)
```
```{r}
#Dataframe for the Example
age = c(22,21,NA,24,19,20,23)
yrs_math_ed = c(4,5,NA,2,5,3,5)
names = c("Mary","Martha","Rosy","Kim","Kristen","Amy","Sam")
subject = c("English","Math",NA,"Sociology","Math","Music","Dance")
df = data.frame(Age = age, Years = yrs_math_ed,Name = names, Major = subject)
df
#Sort on a column with no NAs
df %>% arrange(df$Name)
#Sort on a column with NAs
df %>% arrange(df$Age)
# NA end up at the end of the list when sorted on column with NAs.
```
##Select v. Filter
```{r}
# chooses rows with year < 2000
mpg %>% filter(year < 2000)
#chooses the columns class, city, hwy
mpg %>% select(class, cty, hwy)
```
### New Package GGally
```{r}
#NEW PACKAGE! Ggally
install.packages("GGally")
library(GGally)
#chooses the columns class, city, hwy to use with ggpairs
mpg %>%
select(class, cty, hwy) %>%
ggpairs(aes(color = class))
```
### FIFA example
```{r}
install.packages("GGally")
library(GGally)
fifa = read.csv("/Users/bivin/Desktop/OLD COMPUTER ARCHIVES/KadAfrica/MSDS/DDS/DDS2/Datasets", header = TRUE)
head(fifa)
fifa %>% select(Finishing, BallControl, ShotPower) %>% ggpairs()
#Finising Score v. Ball Control, v Shot Power v. Footed for all players
fifa %>%
filter(Preferred.Foot == "Right" | Preferred.Foot == "Left") %>%
select(Finishing, BallControl, ShotPower, Preferred.Foot) %>% ggpairs(aes(color = Preferred.Foot))
#Right Strikers
fifa %>%
filter(Preferred.Foot == "Right" | Preferred.Foot == "Left" & Position == "RS") %>%
select(Finishing, BallControl, ShotPower, Preferred.Foot) %>% ggpairs(aes(color = Preferred.Foot))
#Left Strikers
fifa %>%
filter(Preferred.Foot == "Right" | Preferred.Foot == "Left" & Position == "LS") %>%
select(Finishing, BallControl, ShotPower, Preferred.Foot) %>% ggpairs(aes(color = Preferred.Foot))
```
### nycflights13
```{r}
install.packages("nycflights13")
library(nycflights13)
```
## group_by
```{r}
#class
mpg %>% group_by(class) %>% summarize(meanCTY = mean(cty), count = n())
# class and model
mpg %>% group_by(class, model) %>% summarize(meanCTY = mean(cty), count = n())
#Chapter 2 example
mpg %>% group_by(class) %>% summarize(sum(cty))
#FIFA example
# With missing Position
fifa %>% group_by(Position) %>% summarize(meanBC = mean(BallControl), count = n()) %>% print(n = 28)
# With missing values in BC removed in mean call
fifa %>% group_by(Position) %>% summarize(meanBC = mean(BallControl,na.rm = TRUE), count = n()) %>% print(n = 28)
# With missing missing values removed before mean call
ab =Soccer %>% filter(Agility | Position == "LM")
AgilityLM = Soccer %>% filter(!is.na(Agility | Position == "LM")) %>% group_by(Position) %>% summarize(meanA = mean(Agility | Position == "LM"), count = n()) %>% arrange(meanA) %>% ggplot(aes(x = Position, y = meanA)) + geom_col()
mean(AgilityLM)
plot(factor(Soccer))
#Bar Chart to visualize ball control by position
fifa %>% filter(!is.na(BallControl)) %>% group_by(Position) %>% summarize(meanBC = mean(BallControl), count = n()) %>% ggplot(aes(x = Position, y = meanBC)) + geom_col()
#Arrange to see in order
fifa %>% filter(!is.na(BallControl)) %>% group_by(Position) %>% summarize(meanBC = mean(BallControl), count = n()) %>% arrange(meanBC) %>% print(n=28)
```
## factor
### Examples
```{r}
#Dataframe for the Example
age = c(22,21,NA,24,19,20,23)
yrs_math_ed = c(4,5,NA,2,5,3,5)
names = c("Mary","Martha","Rosy","Kim","Kristen","Amy","Sam")
subject = c("English","Math",NA,"Sociology","Math","Music","Dance")
df = data.frame(Age = age, Years = yrs_math_ed,Name = names, Major = subject)
df
str(df)
# Names and Subjects are already factors.
#mpg Example
summary(mpg$cyl)
mpg %>%
ggplot(aes(x = hwy, y = cty, color = cyl)) +
geom_point()
mpg %>%
ggplot(aes(x = hwy, y = cty, color = as.factor(cyl))) +
geom_point()
cylFact = factor(mpg$cyl)
cylFact
levels(cylFact) = c("Four","Five","Six","Eight")
cylFact
cylFact = factor(mpg$cyl, labels = c("Four","Five","Six","Eight"))
cylFact
mpg %>%
mutate(cyl_Factor = cylFact) %>%
ggplot(aes(x = hwy, y = cty, color = cyl_Factor)) +
geom_point()
```
### FIFA example
```{r}
#Bar Chart to visualize ball control by position in order of meanBC
#arrange (order) by meanBC
fifa_BC = fifa %>% filter(!is.na(BallControl)) %>% group_by(Position) %>% summarize(meanBC = mean(BallControl), count = n()) %>% arrange(meanBC) %>% print(n=28)
#reorder level of Postition factor
fifa_BC$Position = factor(fifa_BC$Position, level = fifa_BC$Position[order(fifa_BC$meanBC)])
# column plot of ordered results
fifa_BC %>% ggplot(aes(x = Position, y = meanBC)) + geom_col()
```
### Cut Example with mpg data
```{r}
displ_Factor = cut(mpg$displ, breaks = c(1,4,6,8), labels = c("Low","Medium","High"))
mpg %>% mutate(displ_Factor = displ_Factor) %>% ggplot(aes(x = hwy, y = cty, color = displ_Factor)) +geom_point() + ggtitle("City MPG v. Highway MPG by Displacement")
install.packages("GGally")
diamonds %>%
select(price, carat, cut) %>%
ggpairs(mapping = aes(color = cut))
library(tidyverse)
Soccer = read.csv("FIFA Players.csv", header = TRUE)
head(Soccer)
lmlf <- Soccer %>% filter(Position == 'LM' & Position == 'LF',)
dflmlf <- data.frame(lmlf)
head(lmlf)
#Find unusual carat values
library(plotly)
p = diamonds %>% ggplot(aes(x = carat)) + geom_histogram()
#Find unusual carat values
library(plotly)
p = diamonds %>% ggplot(aes(x = carat)) + geom_histogram()
ggplotly(p)
#Find unusual y values
p = diamonds %>% ggplot(aes(x = y)) + geom_histogram()
ggplotly(p)
diamonds %>%
select(price, carat, cut) %>%
ggpairs(mapping = aes(color = cut))
p = diamonds %>%
count(color,cut) %>%
ggplot(aes(x = color, y = cut)) +
geom_tile(mapping = aes(fill = n))
ggplotly(p)
p = fifa %>%
filter(!is.na(BallControl)) %>%
mutate(BallControlFact = cut(BallControl, breaks = c(0,30,60,90,100), labels = c("Very Low", "Low", "Medium", "High"))) %>%
count(Position, BallControlFact) %>%
ggplot(aes(x = Position, BallControlFact)) + geom_tile(mapping = aes(fill = n))
ggplotly(p)
mpg %>% ggplot(aes(x = hwy, y = cty)) +
geom_point(color = "blue")
flights %>%
ggplot(aes(x = dep_delay, y = arr_delay)) +
geom_boxplot(mapping = aes(group = cut_width(dep_delay,50)))+
xlim(c(0,700))
diamonds %>%
mutate(lcarat = log(carat), lprice = log(price)) %>%
ggplot(aes(x = lcarat, y = lprice)) +
geom_point() +
geom_smooth(method = "lm") +
ylim(c(5.5, 10))
diamonds %>%
mutate(lcarat = log(carat), lprice = log(price)) %>%
ggplot(aes(x = lcarat, y = lprice)) +
geom_point() +
geom_smooth(method = "lm") +
ylim(c(5.5, 10))
diamonds %>%
mutate(resids = exp(fit$residuals)) %>%
group_by(cut) %>%
summarise(median = median(resids))
diamonds %>%
mutate(resids = exp(fit$residuals)) %>%
ggplot(aes(y = resids, color = cut)) +
geom_boxplot()
p = diamonds %>% ggplot(aes(x = carat)) + geom_histogram()
#Find unusual y values
p = diamonds %>% ggplot(aes(x = y)) + geom_histogram()
ggplotly(p)
#what is the attrition rate?
ggplot(attritiion, aes(x=Attrition)) + geom_bar()
#what is the attrition rate?
ggplot(attrition, aes(x=Attrition)) + geom_bar()
#what is the attrition rate?
#dataset shows less than 200 employees
prob.table(table(attrition$Attrition))
#what is the attrition rate?
#dataset shows less than 200 employees
prop.table(table(attrition$Attrition))
ggplot(quit, aes(x=age, fill = Attrition)) +
theme_bw()+
geom_histogram(binwidth = 5)
#age for those who quit
ggplot(quit, aes(x=Age, fill = Attrition)) +
theme_bw()+
geom_histogram(binwidth = 5)
#age for those who quit
ggplot(quit, aes(x=Age, fill = Attrition,JobSatisfaction)) +
theme_bw()+
geom_histogram(binwidth = 5)
#age for those who quit
ggplot(quit, aes(x=Age, fill = c(Attrition,JobSatisfaction)) +
#age for those who quit
ggplot(quit, aes(x=Age, fill = Attrition)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=Age, fill = Attrition) +
theme_bw()+
geom_histogram(binwidth = 5)
#age for those who quit
ggplot(quit, aes(x=age, fill = Attrition)) +
theme_bw()+
geom_histogram(binwidth = 5)
#age for those who quit
ggplot(quit, aes(x=Age, fill = Attrition)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=Age, fill = JobSatisfaction)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=Age, fill = JobSatisfaction)) +
theme_bw()+
geom_histogram(binwidth = 5)
#age for those who quit
ggplot(quit, aes(x=Age, fill = Attrition)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=Age, fill = JobSatisfaction)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=Age, fill = JobSatisfaction)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=Jobrole, fill = JobSatisfaction)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=JobRole, fill = JobSatisfaction)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=age, fill = JobRole)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=Age, fill = JobRole)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=Income, fill = JobRole)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=MonthlyIncome, fill = JobRole)) +
theme_bw()+
geom_histogram(binwidth = 5)
quit %>%
group_by(YearsSinceLastPromotion) %>%
count(Department)
quit %>%
group_by(YearsSinceLastPromotion) %>%
count(MonthlyIncome)
quit %>%
group_by(YearsSinceLastPromotion) %>%
count(JobLevel)
ggplot(quit, aes(x=YearsSinceLastPromotion, fill = JobLevel)) +
theme_bw()+
geom_histogram(binwidth = 5)
#age for those who quit
ggplot(quit, aes(x=Age, fill = Attrition)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=YearsSinceLastPromotion, fill = JobLevel)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=YearsSinceLastPromotion, fill = Department)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=YearsSinceLastPromotion, fill = Education)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=Education, fill = Department)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=JobInvolvement, fill = OverTime)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=PercentSalaryHike, fill = Department)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=PerformanceRating, fill = Department)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=RelationshipSatisfaction, fill = Department)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=StockOptionLevel, fill = Department)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=TotalWorkingYears, fill = Department)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=TrainingTimesLastYear, fill = Department)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=WorkLifeBalance, fill = Department)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=YearsAtCompany, fill = Department)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=YearsInCurrentRole, fill = Department)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=YearsWithCurrManager, fill = Department)) +
theme_bw()+
geom_histogram(binwidth = 5)
#Years since last promotion
ggplot(quit, aes(x=YearsSinceLastPromotion, fill = Department)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=StockOptionLevel, fill = Department)) +
theme_bw()+
geom_histogram(binwidth = 5)
ggplot(quit, aes(x=YearsInCurrentRole, fill = Department)) +
theme_bw()+
geom_histogram(binwidth = 5)
quit %>%
select(YearsSinceLastPromotion, StockOptionLevel, YearsInCurrentRole, YearsAtCompany) %>%
ggpairs(aes(color = Preferred.Foot))
library(ggplot2)
quit %>%
select(YearsSinceLastPromotion, StockOptionLevel, YearsInCurrentRole, YearsAtCompany) %>%
ggpairs(aes(color = Preferred.Foot))
fifa %>%
filter(Preferred.Foot == "Right" | Preferred.Foot == "Left" & Position == "LS") %>%
select(Finishing, BallControl, ShotPower, Preferred.Foot) %>% ggpairs(aes(color = Preferred.Foot))
library(GGally)
library(GGally)
library(ggplot2)
quit %>%
select(YearsSinceLastPromotion, StockOptionLevel, YearsInCurrentRole, YearsAtCompany) %>%
ggpairs(aes(color = Preferred.Foot))
quit %>%
select(YearsSinceLastPromotion, StockOptionLevel, YearsInCurrentRole, YearsAtCompany) %>%
ggpairs(aes(color = Departmet))
quit %>%
select(YearsSinceLastPromotion, StockOptionLevel, YearsInCurrentRole, YearsAtCompany) %>%
ggpairs(aes(color = Department))
quit %>%
select(YearsSinceLastPromotion, StockOptionLevel, YearsInCurrentRole, YearsAtCompany) %>%
ggpairs(aes(color =Department))
quit %>%
select(YearsSinceLastPromotion, StockOptionLevel, YearsInCurrentRole, YearsAtCompany) %>%
ggpairs(aes(color = Age))
quit %>%
select(YearsSinceLastPromotion, StockOptionLevel, YearsInCurrentRole, YearsAtCompany) %>%
ggpairs()
quit %>%
select(Attrition,YearsSinceLastPromotion, StockOptionLevel, YearsInCurrentRole, YearsAtCompany) %>%
ggpairs()
